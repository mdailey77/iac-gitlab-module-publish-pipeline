---
.module-publish:
  stage: publish
  image: ${CI_REGISTRY}/c1-swift-shield/arcturus/containers/ubuntu:rolling
  script:
    # Check if TERRAFORM_MODULE_SYSTEM is set
    - |
      if [ -z "${TERRAFORM_MODULE_SYSTEM}" ]; then
        echo "TERRAFORM_MODULE_SYSTEM is not set"
        exit 1
      else 
        echo "TERRAFORM_MODULE_SYSTEM is set to ${TERRAFORM_MODULE_SYSTEM}"
      fi
    - echo "The module version is set to ${TERRAFORM_MODULE_VERSION}"
    - TERRAFORM_MODULE_NAME=$(echo "${TERRAFORM_MODULE_NAME}" | tr " _" -)  # module-name must not have spaces or underscores, so translate them to hyphens
    - TAR_FILENAME="/tmp/${TERRAFORM_MODULE_NAME}-${TERRAFORM_MODULE_SYSTEM}-${TERRAFORM_MODULE_VERSION}.tgz"
    - UPLOAD_URL="${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/terraform/modules/olivias/${TERRAFORM_MODULE_SYSTEM}/${TERRAFORM_MODULE_VERSION}/file"
    # Create and populate exclude_list.txt
    - |
      touch exclude_list.txt
      output_file="exclude_list.txt"
      exclude_list=(".gitignore" "cliff.toml" "README.md" ".gitlab-ci.yml" "git-cliff" "exclude_list.txt")
      for item in "${exclude_list[@]}"; do
        echo "$item" >> "$output_file"
      done
      cat exclude_list.txt
    # Builds the Terraform module artifact: a gzipped tar archive with the contents from `$TERRAFORM_MODULE_DIR` without a `.git` directory.
    - tar --exclude-vcs --exclude-from=exclude_list.txt -vczf "${TAR_FILENAME}" -C "${TERRAFORM_MODULE_DIR}" .
    # Uploads the Terraform module artifact to the GitLab Terraform Module Registry
    - 'curl --fail-with-body --location --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file "${TAR_FILENAME}" "${UPLOAD_URL}"'
